# Generated by Django 4.1 on 2024-12-06 11:06

import datetime
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('competition_id', models.UUIDField(default=uuid.uuid4)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('goal_competition', models.TextField(null=True)),
                ('tasks_compotition', models.TextField(null=True)),
                ('author_id', models.UUIDField(default=uuid.uuid4)),
                ('owners_id', models.TextField(default=uuid.uuid4)),
                ('rules', models.CharField(default='Нет', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionFiles',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('competition_id', models.UUIDField()),
                ('name', models.CharField(max_length=255)),
                ('media', models.FileField(blank=True, null=True, upload_to='media/')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackForm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('email', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=25)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.UUIDField()),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('Успешно', 'Успешно'), ('В процессе', 'В процессе'), ('Отказано', 'Отказано'), ('Не подтверждён', 'Не подтверждён')], default='Не подтверждён', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Pupil',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('surname', models.TextField()),
                ('class_name', models.CharField(default='1А', max_length=5)),
                ('competition_activities', models.TextField(null=True)),
                ('shop_id', models.UUIDField(default=uuid.uuid4)),
                ('teacher_id', models.UUIDField(default=uuid.uuid4)),
            ],
        ),
        migrations.CreateModel(
            name='Rules',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rule', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(default=uuid.uuid4)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('password', models.TextField()),
                ('category', models.CharField(choices=[('Учитель', 'Учитель'), ('Ученик', 'Ученик')], default='Ученик', max_length=25)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('cell', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('teacher_id', models.UUIDField(default=uuid.uuid4)),
                ('name', models.TextField()),
                ('surname', models.TextField()),
                ('competition_activities', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.UUIDField()),
                ('token', models.TextField()),
                ('update_date', models.DateTimeField(default=datetime.datetime(2024, 12, 6, 18, 6, 22, 566240))),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(default=uuid.uuid4)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('password', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
